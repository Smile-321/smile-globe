{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import * as THREE from 'https://cdn.skypack.dev/three@0.152.2';\
import \{ OrbitControls \} from 'https://cdn.skypack.dev/three/examples/jsm/controls/OrbitControls.js';\
\
const scene = new THREE.Scene();\
const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);\
camera.position.z = 2;\
\
const renderer = new THREE.WebGLRenderer(\{ canvas: document.getElementById('globe-canvas'), antialias: true \});\
renderer.setSize(window.innerWidth, window.innerHeight);\
renderer.setPixelRatio(window.devicePixelRatio);\
\
const textureLoader = new THREE.TextureLoader();\
const earthTexture = textureLoader.load('https://raw.githubusercontent.com/creotiv/smile-globe/main/earth.jpg');\
\
const geometry = new THREE.SphereGeometry(0.8, 64, 64);\
const material = new THREE.MeshStandardMaterial(\{ map: earthTexture \});\
const earth = new THREE.Mesh(geometry, material);\
scene.add(earth);\
\
const ambientLight = new THREE.AmbientLight(0xffffff, 1.2);\
scene.add(ambientLight);\
\
const controls = new OrbitControls(camera, renderer.domElement);\
controls.enableZoom = true;\
controls.enablePan = false;\
\
function animate() \{\
  requestAnimationFrame(animate);\
  earth.rotation.y += 0.0005;\
  controls.update();\
  renderer.render(scene, camera);\
\}\
\
animate();\
}